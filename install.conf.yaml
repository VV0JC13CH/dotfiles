- defaults:
    link:
      relink: true
      create: true
      force: true 

- clean: ['~']

- create:
    - ~/Projects
    - ~/Sandbox
    - ~/.local/share/fonts

- link:
  # Tools configuration:
    ~/.config/alacritty:
      path: config/alacritty
    ~/.config/fish:
      path: config/fish
    ~/.config/omf:
      path: config/fish/omf
    ~/.config/nvim:
      path: config/nvim
    ~/.config/tmux:
      path: config/tmux
    ~/.urlview:
      path: config/tmux/scripts/urlview
    ~/.config/ranger:
      path: config/ranger
   # Fzf:
    ~/.local/bin/fd:
      path: /usr/bin/fdfind
    ~/.local/bin/bat:
      path: /usr/bin/batcat

- git:
    #Tmux plugins:
    '~/.config/tmux/plugins/tpm':
      url: 'git@github.com:tmux-plugins/tpm.git'
      method: clone-or-pull
    #Ranger plugins
    '~/.config/ranger/plugins/ranger_tmux':
      url: 'git@github.com:joouha/ranger_tmux.git'
      method: clone-or-pull
    #Fzf installer script
    '~/.config/fzf/':
      url: 'git@github.com:junegunn/fzf.git'
      method: clone-or-pull
    #Omf installer script
    '~/.local/omf/':
      url: 'git@github.com:oh-my-fish/oh-my-fish.git'
      method: clone-or-pull

- sudo:
  - shell:
    - [wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg, Get hashicorp key]
    - [curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --yes -o /usr/share/keyrings/docker.gpg, Get docker key]
    - [curl -s https://syncthing.net/release-key.txt | apt-key add -, Get syncthing key]  
    - [cp ./sources.list.d/* /etc/apt/sources.list.d/, Add additional custom repositories]
    - [add-apt-repository ppa:neovim-ppa/unstable -y, Add neovim-ppa/unstable]
    - [add-apt-repository ppa:fish-shell/release-3 -y, Add fish-ppa]
  
  - apt:
    - gpg
    # Terminal tools:
    - alacritty
    - tmux
    # Shell tools:
    - fish
    # Vim tools:
    - neovim
    - terraform-ls
    # Docker:
    - ca-certificates
    - gnupg
    - docker-ce
    - docker-ce-cli
    - containerd.io
    # Go env
    - golang-go
    # Lua environment:
    - lua5.4
    # Ruby env
    - ruby-rubygems
    # Snap:
    - snap
    # Sync:
    - syncthing
    # Google translator:
    - translate-shell
    # Python packages:
    - pipx
    # Vim plugins:
    - ranger
    - fzf
    - fd-find
    - ripgrep
    - bat
    - highlight
    # Tmux plugins:
    - urlview

- pip:
    file: requirements.txt
    binary: /usr/bin/pip
    user: true    # Like --user
    stdout: false # Print the execution stdout
    stderr: true  # Print the execution stderr

- flatpak:
  - io.gitlab.librewolf-community
  - md.obsidian.Obsidian

- shell:
  # alacritty
  - [/bin/bash -c "wget https://github.com/ryanoasis/nerd-fonts/releases/latest/download/JetBrainsMono.zip && unzip -o JetBrainsMono.zip -d ~/.local/share/fonts/ && rm -f JetBrainsMono.zip", Install JetBrainsMono font]
  # Librewolf
  - [cp ./config/librewolf/librewolf.overrides.cfg ~/.var/app/io.gitlab.librewolf-community/.librewolf/librewolf.overrides.cfg, Update config of Librewolf]
  - [xdg-settings get default-web-browser, Update default browser in terminal]
  # tmux
  - [python3 -m ranger_tmux install, Integrate ranger and tmux (create symlink for plugin)] 
  #fish
  - [curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/HEAD/functions/fisher.fish | source && fisher install jorgebucaran/fisher, Update fisher]
  - [~/.local/omf/bin/install --offline --yes --noninteractive --config=~/.config/omf/, Update omf]
  - [omf update, Install/Update omf plugins]
  - [fisher update, Install fish plugins]
  #rust
  - [set -Ua fish_user_paths $HOME/.cargo/bin, Create path to rust environment]
  - [curl https://sh.rustup.rs -sSf | sh -s -- -y, Setup rust environment]
  #syncthing
  - [systemctl --user enable syncthing.service, Ensure syncthing runs in background] 
  #fzf update
  - [~/.config/fzf/install --completion --no-key-bindings --update-rc]
  # git confiuration
  - [git config core.defaultbranch “main”, Ensure main is default git branch]
  - [git config core.editor “vim”, Ensure vim is default git editor]
  - [git config pull.rebase "true", Ensure git pull.rebase is set to true]
  # jira-cli
  - [go install github.com/ankitpokhrel/jira-cli/cmd/jira@latest, Install jira-cli]

- snap:
  - k9s

- cargo:
  - zoxide:
    - locked
  - tmux-sessionizer
  - leetup
