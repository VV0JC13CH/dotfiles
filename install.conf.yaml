- defaults:
    link:
      relink: true
      create: true
      force: true 

- clean: ['~']

- create:
    - ~/Projects
    - ~/Sandbox
    - ~/.local/share/fonts

- link:
  # Tools configuration:
    ~/.config/fish:
      path: config/fish
    ~/.config/tmux:
      path: config/tmux
    ~/.config/nvim:
      path: config/nvim
    ~/.config/alacritty:
      path: config/alacritty


   # Fzf:
    ~/.local/bin/fd:
      path: /usr/bin/fdfind
    ~/.local/bin/bat:
      path: /usr/bin/batcat

- sudo:
  - shell:
    - [wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg, Get hashicorp key]
    - [curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --yes -o /usr/share/keyrings/docker.gpg, Get docker key]
    - [curl -s https://syncthing.net/release-key.txt | apt-key add -, Get syncthing key]  
    - [cp ./sources.list.d/* /etc/apt/sources.list.d/, Add additional custom repositories]
    - [add-apt-repository ppa:neovim-ppa/unstable -y, Add neovim-ppa/unstable]
  
  - apt:
    - gpg
    # Terminal tools:
    - alacritty
    - tmux
    # Shell tools:
    - bat
    - fish
    - fzf
    - fd-find
    - highlight
    # Vim tools:
    - neovim
    - terraform-ls
    # Docker:
    - ca-certificates
    - gnupg
    - docker-ce
    - docker-ce-cli
    - containerd.io
    # Go env
    - golang-go
    # Ruby env
    - ruby-rubygems
    # Sync:
    - syncthing
    # Google translator:
    - translate-shell
    # Python packages:
    - pipx
    # rnvimr
    - ranger

- pip:
    file: requirements.txt
    binary: /usr/bin/pip
    user: true    # Like --user
    stdout: false # Print the execution stdout
    stderr: true  # Print the execution stderr

- flatpak:
  - io.gitlab.librewolf-community
  - md.obsidian.Obsidian

- shell:
  # Librewolf
  - [cp ./config/librewolf/librewolf.overrides.cfg ~/.var/app/io.gitlab.librewolf-community/.librewolf/librewolf.overrides.cfg, Update config of Librewolf]
  #nvim
  - [nvim --headless +PlugInstall +qall, Check if all nvim plugins are installed]
  - [nvim --headless +PlugUpdate +qall, Update nvim plugins]
  #fish
  - [curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher, Update fish(er)]
  - [fisher update, Install fish plugins]
  - [set -Ua fish_user_paths $HOME/.cargo/bin, Create path to rust environment]
  #rust
  - [curl https://sh.rustup.rs -sSf | sh -s -- -y, Setup rust environment]
  #syncthing
  - [systemctl --user enable syncthing.service, Ensure syncthing runs in background] 
  # git confiuration
  - [git config core.defaultbranch “main”, Ensure main is default git branch"]
  - [git config core.editor “vim”, Ensure vim is default git editor"]
  - [git config pull.rebase "true", Ensure git pull.rebase is set to true"]
